#include "stdafx.h"
#include "SADXModLoader.h"

ObjectMaster* consolePtr;

/* NINJA Chunk model
 *
 * Generated by SAMDL
 *
 */

Sint32 cnk_polygon0_vtx[] = { 0x310029, 0x80000, 0xBE800000u, 0xBF4FA82Eu, 0x0, 0xBF400F80u, 0xBF25774Bu, 0x3E0E411C, 0xBE800000u, 0xBF944849u, 0xBFCED089u, 0xBF134D27u, 0xBF2DB55Bu, 0xBEE9C1D4u, 0xBE800000u, 0x3F944849, 0x0, 0xBF2A0954u, 0x3F3C7179, 0xBE05590Bu, 0xBE800000u, 0x3F4FA82E, 0xBFFB44BBu, 0xBF13CF28u, 0x3EEFA9DF, 0xBF2B3F56u, 0x3E800000, 0x3F944849, 0x0, 0x3F2A0954, 0x3F3C7179, 0xBE05590Bu, 0x3E800000, 0x3F4FA82E, 0xBFFB44BBu, 0x3F13CF28, 0x3EEFA9DF, 0xBF2B3F56u, 0x3E800000, 0xBF4FA82Eu, 0x0, 0x3F400F80, 0xBF25774Bu, 0x3E0E411C, 0x3E800000, 0xBF944849u, 0xBFCED089u, 0x3F134D27, 0xBF2DB55Bu, 0xBEE9C1D4u, 0xFF, 0x0 };

Sint16 cnk_polygon0_poly[] = { 0x8, 0x6000, 0x2517, 0x6, 0xFFFFu, 0xFFFFu, 0xFFFFu, 0xFF, 0xFFFFu, 0xFFFFu, 0x1041, 0x3B, 0x4, 0x4, 0x0, 0xFC, 0x5C, 0x2, 0x4, 0x72, 0x1, 0xFC, 0x2, 0x3, 0x4, 0x2, 0x4, 0x4, 0x4, 0x72, 0x6, 0xFC, 0x5C, 0x5, 0x4, 0x2, 0x7, 0xFC, 0x2, 0x6, 0x6, 0x42, 0xFE, 0x0, 0x7E, 0xFE, 0x7, 0x42, 0x78, 0x1, 0x7E, 0x78, 0x5, 0x42, 0x72, 0x3, 0x7E, 0x72, 0x4, 0x2, 0x5, 0xFA, 0x4, 0x3D, 0xFA, 0x3, 0x5, 0x78, 0x5, 0x3D, 0x78, 0xFF };

NJS_CNK_MODEL cnk_polygon0 = { cnk_polygon0_vtx, cnk_polygon0_poly, { 0, 0, -0.9815175f }, 1.538797f };

NJS_OBJECT wii_main = { NJD_EVAL_UNIT_POS | NJD_EVAL_UNIT_SCL | NJD_EVAL_BREAK | NJD_EVAL_SHAPE_SKIP, &cnk_polygon0, 0, 0, 0, 0x4000, 0, 0, 1, 1, 1, NULL, NULL };

/* NINJA Chunk model
 *
 * Generated by SAMDL
 *
 */

Sint32 cnk_polygon1_vtx[] = { 0x490029, 0xC0000, 0x3F116CF8, 0xBE0816F0u, 0x3E12EC29, 0x3E8B0916, 0xBF22C546u, 0x3F38F372, 0x3F3953AC, 0xBE0816F0u, 0x3BE6644D, 0x3E5A49B5, 0xBF4BA597u, 0x3F113322, 0xBEC33C82u, 0xBE0816F0u, 0x3E12EC29, 0xBF13CD28u, 0xBF13CD28u, 0x3F13CD28, 0xBEC33C82u, 0xBE0816F0u, 0xBE12EC29u, 0xBF13CD28u, 0xBF13CD28u, 0xBF13CD28u, 0x3F764830, 0x3E0816F0, 0x3BE6644D, 0x3F13CD28, 0x3F13CD28, 0x3F13CD28, 0x3F3953AC, 0x3E0816F0, 0x3BE6644D, 0x3E5A49B5, 0x3F4BA597, 0x3F113322, 0x3F764830, 0x3E0816F0, 0xBE12EC29u, 0x3F13CD28, 0x3F13CD28, 0xBF13CD28u, 0xBEC33C82u, 0x3E0816F0, 0xBE12EC29u, 0xBF13CD28u, 0x3F13CD28, 0xBF13CD28u, 0x3F764830, 0xBE0816F0u, 0x3BE6644D, 0x3F13CD28, 0xBF13CD28u, 0x3F13CD28, 0x3F764830, 0xBE0816F0u, 0xBE12EC29u, 0x3F13CD28, 0xBF13CD28u, 0xBF13CD28u, 0x3F116CF8, 0x3E0816F0, 0x3E12EC29, 0x3E8B0916, 0x3F22C546, 0x3F38F372, 0xBEC33C82u, 0x3E0816F0, 0x3E12EC29, 0xBF13CD28u, 0x3F13CD28, 0x3F13CD28, 0xFF, 0x0 };

Sint16 cnk_polygon1_poly[] = { 0x8, 0x6000, 0x2517, 0x6, 0xFFFFu, 0xFFFFu, 0xFFFFu, 0xFF, 0xFFFFu, 0xFFFFu, 0x1041, 0x67, 0x6, 0x7, 0x0, 0x9F, 0x9F, 0x2, 0x9F, 0xFE, 0x1, 0xAF, 0x8F, 0x3, 0xC1, 0xFE, 0x9, 0xC1, 0x77, 0x7, 0xFE, 0xFE, 0x6, 0xFE, 0x77, 0x7, 0x4, 0xAF, 0x77, 0x6, 0xC1, 0x77, 0x5, 0xAF, 0x8F, 0x7, 0xC1, 0xFE, 0xA, 0x9F, 0x9F, 0xB, 0x9F, 0xFE, 0x2, 0x81, 0xFD, 0x3, 0x1, 0xAF, 0x8F, 0x9, 0xC1, 0x77, 0x8, 0xAF, 0x77, 0xFFF9u, 0x2, 0x81, 0xFD, 0xA, 0x9F, 0x9F, 0x0, 0x81, 0xA0, 0x5, 0x9E, 0x8F, 0x1, 0x81, 0x8F, 0x4, 0x9E, 0x77, 0x8, 0x81, 0x77, 0x4, 0x4, 0xFE, 0x65, 0x8, 0xC1, 0x65, 0x6, 0xFE, 0x77, 0x9, 0xC1, 0x77, 0x4, 0x2, 0xC1, 0x101, 0xB, 0xFE, 0x101, 0x3, 0xC1, 0xFE, 0x7, 0xFE, 0xFE, 0xFF };

NJS_CNK_MODEL cnk_polygon1 = { cnk_polygon1_vtx, cnk_polygon1_poly, { 0.290359f, 0, 0 }, 0.6995732f };

NJS_OBJECT wii_remote = { NJD_EVAL_UNIT_POS | NJD_EVAL_UNIT_SCL | NJD_EVAL_BREAK | NJD_EVAL_SHAPE_SKIP, &cnk_polygon1, 0, 0, 0, 0x4000, 0, 0, 1, 1, 1, NULL, NULL };
NJS_OBJECT wii_remote_bhav = { NJD_EVAL_UNIT_POS | NJD_EVAL_UNIT_SCL | NJD_EVAL_BREAK | NJD_EVAL_SHAPE_SKIP, &cnk_polygon1, 0, 0, 0, 0, 0, 0, 1, 1, 1, NULL, NULL };
NJS_TEXNAME AL_WII_TEXNAMES[1];
NJS_TEXLIST AL_WII_TEXLIST = { AL_WII_TEXNAMES, 1 };

void Console_Display(ObjectMaster* a1)
{
	//if (ScaleObjectMaster_XYZ(a1, 3.0f, 3.0f, 1.0f)) 
	{
		njPushMatrixEx();
		njSetTexture(&AL_WII_TEXLIST);
		njControl3D_Add(NJD_CONTROL_3D_TRANS_MODIFIER | NJD_CONTROL_3D_SHADOW);

		njTranslate(0, a1->Data1->Position.x, a1->Data1->Position.y, a1->Data1->Position.z);
		//njRotateY(0, a1->Data1->Rotation.y);
		//njScale(0, 1, 1, 1);
		njCnkDrawObject(&wii_main);

		if (a1->Data1->Action == 0) {
			njTranslate(0, -2.5f, 0, 0);
			njRotateY(0, 0x1000);
			njScale(0, 2, 2, 2);
			njCnkDrawObject(&wii_remote);
		}
		njControl3D_Remove(NJD_CONTROL_3D_TRANS_MODIFIER | NJD_CONTROL_3D_SHADOW);
		njPopMatrixEx();
	}
}


void Console_Delete(ObjectMaster* a1)
{
	consolePtr = nullptr;
}

void Console_Main(ObjectMaster* a1)
{
	//if (a1->Data1->Action == 1 && !ALOField_Find(a1, 1, 201))
	//	a1->Data1->Action = 0;
	a1->DisplaySub(a1);
}

//i wouldnt need to do this but sadx for some reason is retarded, or my VS project is
void Console_Load(ObjectMaster* a1)
{
	a1->MainSub = Console_Main;
	a1->DisplaySub = Console_Display;
	a1->DeleteSub = Console_Delete;
}

ObjectMaster* PlaceConsole(NJS_VECTOR* pos)
{
	ObjectMaster* tv;
	EntityData1* tvData;
	LoadPVM("AL_WII", &AL_WII_TEXLIST);
	tv = LoadObject(LoadObj_Data1, 4, Console_Load);
	tvData = tv->Data1;
	consolePtr = tv;
	if (tv)
	{
		tvData->Position = *pos;
		//tvData->Rotation.x = 15;
		//tvData->Rotation.y = 0x8000;
		tvData->Scale.x = 1;
		tvData->Scale.y = 1;
		tvData->Scale.z = 1;
		//InitCollision(tv, &tvCollision, 1, 4);
	}
	return tv;
}